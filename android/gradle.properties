## JVM args for Gradle: increase heap and enable native access on newer JDKs
## If you're using JDK 17 it's fine without extra flags, but newer JDKs (>=19) may
## require --enable-native-access to allow native library loading used by Gradle.
org.gradle.jvmargs=-Xmx8G -XX:MaxMetaspaceSize=4G -XX:ReservedCodeCacheSize=512m -XX:+HeapDumpOnOutOfMemoryError --enable-native-access=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED
android.useAndroidX=true
android.enableJetifier=true

# If you still see native-access warnings or Gradle fails when using a newer JDK,
# it's recommended to run Gradle with JDK 17 which is the supported runtime for
# Android Gradle Plugin. You can force Gradle to use a specific JDK by setting
# `org.gradle.java.home` below (uncomment and update the path to your JDK 17).
# Example Windows path:
# org.gradle.java.home=C:/Program Files/Java/jdk-17
# Force Gradle to use the provided JDK 17 installation for building.
org.gradle.java.home=C:/Program Files/Java/jdk-17

# Alternatively make sure your CI (Codemagic) uses java: 17 in its environment.

# Disable lint vital for release on CI to avoid lint tool class incompatibility failures
# This prevents the lintVitalAnalyzeRelease task from failing the build.
android.disableLintVitalForRelease=true
