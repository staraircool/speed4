plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

android {
    namespace "com.pro.speedy"
    compileSdk flutter.compileSdkVersion

    // Optional: use Flutter's ndkVersion if defined
    try {
        ndkVersion flutter.ndkVersion
    } catch (Exception e) {
        // ignore
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    defaultConfig {
        applicationId "com.pro.speedy"
        minSdk flutter.minSdkVersion
        targetSdk flutter.targetSdkVersion
        versionCode flutter.versionCode
        versionName flutter.versionName
    }

    signingConfigs {
        def keystorePropertiesFile = rootProject.file('android/key.properties')
        if (keystorePropertiesFile.exists()) {
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            release {
                def storePath = keystoreProperties.getProperty('storeFile')
                def resolvedStore = storePath ? rootProject.file("android/${storePath}") : rootProject.file('android/keystore.jks')
                storeFile resolvedStore
                storePassword keystoreProperties.getProperty('storePassword')
                keyAlias keystoreProperties.getProperty('keyAlias')
                keyPassword keystoreProperties.getProperty('keyPassword')
            }
        } else {
            release {
                storeFile rootProject.file('android/keystore.jks')
                storePassword 'Star234'
                keyAlias 'key'
                keyPassword 'Star234'
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}
