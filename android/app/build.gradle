plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

android {
    namespace "com.pro.speedy"
    compileSdk flutter.compileSdkVersion

    // Force NDK version to match the installed NDK to avoid CXX1104
    ndkVersion "27.3.13750724"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    defaultConfig {
        applicationId "com.pro.speedy"
        minSdk flutter.minSdkVersion
        targetSdk flutter.targetSdkVersion
        versionCode flutter.versionCode
        versionName flutter.versionName
    }

    signingConfigs {
        def keystorePropertiesFile = rootProject.file('android/key.properties')

        if (keystorePropertiesFile.exists()) {
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            release {
                def storePath = keystoreProperties.getProperty('storeFile')
                // This resolves the path relative to the key.properties file's parent directory,
                // which is a robust way to handle paths for both local and CI builds.
                storeFile new File(keystorePropertiesFile.parentFile, storePath)
                storePassword keystoreProperties.getProperty('storePassword')
                keyAlias keystoreProperties.getProperty('keyAlias')
                keyPassword keystoreProperties.getProperty('keyPassword')
            }
        } else if (System.getenv('KEYSTORE_PASSWORD') && System.getenv('KEY_ALIAS')) {
            // CI path: assume upload-keystore.jks exists in android/ and creds in env
            release {
                storeFile rootProject.file('android/upload-keystore.jks')
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('KEY_ALIAS')
                keyPassword System.getenv('KEY_PASSWORD')
            }
        } else {
            // fallback
            release {
                storeFile rootProject.file('android/keystore.jks')
                storePassword 'Star234'
                keyAlias 'key'
                keyPassword 'Star234'
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}
